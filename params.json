{
  "name": "Cg",
  "tagline": "",
  "body": "`#include<stdlib.h>`\r\n`#include <GL/glut.h>`\r\n`#include <stdio.h>`\r\n\r\n`/* initial triangle */`\r\n\r\n`GLfloat v[3][2]={{-1.0, -0.58}, {1.0, -0.58}, {0.0, 1.15}};`\r\n\r\n`int n;`\r\n\r\n`void triangle( GLfloat *a, GLfloat *b, GLfloat *c)`\r\n`{`\r\n`glVertex2fv(a);`\r\n`glVertex2fv(b);`\r\n`glVertex2fv(c);`\r\n`}`\r\n\r\n\r\n`void divide_triangle(GLfloat *a, GLfloat *b, GLfloat *c, int m)`\r\n`{`\r\n\r\n`/* triangle subdivision using vertex numbers */`\r\n\r\n`GLfloat v0[2], v1[2], v2[2];`\r\n`int j;`\r\n`if(m>0)`\r\n`{`\r\n`for(j=0; j<2; j++) v0[j]=(a[j]+b[j])/2;`\r\n`for(j=0; j<2; j++) v1[j]=(a[j]+c[j])/2;`\r\n`for(j=0; j<2; j++) v2[j]=(b[j]+c[j])/2;`\r\n`divide_triangle(a, v0, v1, m-1);`\r\n`divide_triangle(c, v1, v2, m-1);`\r\n`divide_triangle(b, v2, v0, m-1);`\r\n`}`\r\n`else triangle(a,b,c); /* draw triangle at end of recursion */`\r\n`}`\r\n\r\n`void display()`\r\n`{`\r\n`glClear(GL_COLOR_BUFFER_BIT);`\r\n`glBegin(GL_TRIANGLES);`\r\n`divide_triangle(v[0], v[1], v[2], n);`\r\n`glEnd();`\r\n`glFlush();`\r\n`}`\r\n\r\n`void myinit()`\r\n`{`\r\n`glMatrixMode(GL_PROJECTION);`\r\n`glLoadIdentity();`\r\n`gluOrtho2D(-2.0, 2.0, -2.0, 2.0);`\r\n`glMatrixMode(GL_MODELVIEW);`\r\n`glClearColor (1.0, 1.0, 1.0, 1.0);`\r\n`glColor3f(0.0,0.0,0.0);`\r\n`}`\r\n\r\n`int main(int argc, char **argv)`\r\n`{`\r\n`//n=atoi(argv[1]); /* or set number of subdivision steps here */`\r\n`glutInit(&argc, argv);`\r\n`printf(\"Enter the number of divisions : \");`\r\n`scanf(\"%d\",&n);`\r\n`glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);`\r\n`glutInitWindowSize(500, 500);`\r\n`glutCreateWindow(\"Sierpinski Gasket\");`\r\n`glutDisplayFunc(display);`\r\n`myinit();`\r\n`glutMainLoop();`\r\n`return 0;`\r\n`}`",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}